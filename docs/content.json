{"pages":[{"title":"お探しのページは見つかりませんでした。","text":"","link":"/cats-cats-cats/404.html"},{"title":"about","text":"hinastoryのブログです。興味のある技術を中心に記録していきます。 本ブログの著作権は、引用元が他所と分かる文章と画像を除いて、hinastoryが保持しています。本ブログ内のhinastoryが著作権を有する記事と画像(cats cats catのロゴ画像を除く)はCC BY 4.0()で公開されています。 cats cats catsのロゴ画像は本ブログのシンボルですので、本ブログを引用元として明示したい場合にご利用できます。それ以外の用途での利用はご遠慮ください。 本ブログに関するお問い合わせは以下へのメールでお願いします。","link":"/cats-cats-cats/about/index.html"}],"posts":[{"title":"Hexoでブログに再入門","text":"Advent Calendar用に久々にブログを立てて見ました。以前にパブリックに書いたのは多分10年以上前のような気がします。レンタルーサーバ借りてドメイン取ってRubyで動く何かを使って立てた気がするけど、よく思い出せません・・・ まぁ、過去のことは置いておいてせっかく立てたので、何か役立ちそうなことをメモしていきたいと思います。 目次1. Hexoとは2. 静的サイトジェネレータ3. 静的サイトジェネレータの長所4. 静的サイトジェネレータの短所5. なぜHexoを選んだのか？6. まとめ7. 補足 1. Hexoとはとりあえず今回このブログは、Hexo使って立ててみました1。Hexoはブログを書くためのフレームワークですが、WordPressのような従来型のブログサービスとの一番の違いは、静的にブログを生成するか、動的に生成するかです。 2. 静的サイトジェネレータHexoは静的サイトジェネレータというツールに分類されていて、あらかじめ用意したブログのテキストや画像等から、ブログの表示に必要なHTML,CSS,JavaScriptなどの静的ファイルを生成してくれます。Hexoがやってくれるのはここまでで、あとはHexoが生成したファイルをお好みのWebサーバに公開すればブログが表示されると言う仕組みです。WordPressはこれとは違い、Webにアクセスが来るごとにWebページをサーバサイドのプログラムが動的に生成してブラウザに返しています。 3. 静的サイトジェネレータの長所どちらにも一長一短があって、静的サイトジェネレータの良いところはローカルで確認してから、チェックが完了してからWeb公開できる点です。このローカルで確認できると言うのはすごい強みで、画像のアップロードも不要だし、テキストやCSSの修正も手元で直してすぐ確認できると言うのが非常に心地いいです。これが動的サイトだと一度サーバにアップロードして確認と言う手間が一つ入るため、色々と面倒臭くなります。 また、静的サイトジェネレータの場合、サイトの生成に必要なファイルは必然的に手元で管理することになるので、Gitなどのバージョン管理システムと相性が良いです。これは非常に安心感があって、こまめにコミットしておけば様々な理由による『ブログの消失』を未然に防ぐことができます。動的サイトの場合も手元にファイル等の形で残しておけば、バージョン管理することができますが、ちょこっとした修正をサーバにアップロードして、バージョン管理用ファイルに反映し忘れるという事故が起き易いです。 セキュリティ的に安心というのも魅力の一つですね。サーバサイドの処理がないので攻撃パターンが限られますし、特にWebサーバにホスティングサービスを使っている場合、自分ではほぼ何もセキュリティについて考えることはないです。少ない懸念点の一つとしてあげるならばJavaScriptを使ってる場合です。まぁ最近は大抵知らずのうちに使われてると思いますが、特に怪しいライブラリを使っている場合に勝手にマイニングされたり、踏み台にされる場合もあるので、気をつけた方が良いかもしれません2。 4. 静的サイトジェネレータの短所このようにHexoのような静的サイトジェネレータ型のブログツールには利点がたくさんあるのですが、もちろん欠点もあります。一番目立つのは、非エンジニアにとって利用するのにハードルが高いということです。例えば、Hexoのトップページには「Simple」と謳いながら、以下の導入時のコマンドが載っています。\u0010\u0010\u001012345$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo server これを見て「簡単そうだな、やってみようかな」と思える人は世の中に1%もいないと思います。もちろん現役のWebフロントエンドエンジニアなら、これを見てお湯を注いだカップラーメンができるより早くブログサイトを構築できるでしょう3。つまり、現在のところ静的サイトジェネレータはGitが分かるフロントエンドエンジニアにとって、非常に使い易いツールだけど、それ以外の人は、まぁ覚悟して取り組んでくださいとしか言いようがないですね。。。もちろん将来的にはシンプル詐欺などではなく本当に非エンジニアでも無理なく使えるツールが出てくるかもしれないので、この点は静的サイトジェネレータ固有の短所というよりもまだ成熟途中の技術の特徴ということになります。 あと当然ですが、静的サイトジェネレータ単体ではサーバサイドという概念がないのでRDBと連携して、大量データの検索とかテーブルの結合とかそういった処理も基本できません。カウンタやトラックバックやコメント機能などのブログにおなじみの機能もデフォルトではありません。このような場合はWebサービスと連携するのが常套手段ですが4、複雑になりそうなら最初から動的サイトやSPAやSSR等の構成5を検討した方が良いでしょう。逆に考えると静的サイトジェネレータの一番の使い道はこのような処理が基本的に不要な場合のプライベートなブログで、まさにHexoはこのサイトにうってつけなのでしょう。 5. なぜHexoを選んだのか？まさしく、前掲のコマンドを見て簡単そうに思えたからです(笑)。つまりそれをコピペして実行するだけで試せる環境と知識をすでに有していたからということになります。あとはHexoと言うより静的ジェネレータの利点の方が大きいですね。最初はVPSやパブリッククラウド上に、以前のように動的サイトを構築しようと考えていましたが、構築コストやセキュリティのことを考えるとだんだん気が重くなってきました。ブログサービスも検討しましたが、ソースは全てGit管理したかったのと手元で表示確認がすぐにできないので却下しました。つまりGit管理と親和性があって手元ですぐにサイトの表示が確認できて、セキュリティーの心配をあまり心配しなくてもいい記事投稿が簡単にできるブログツールを探していたということになります。その中で一番最初に目に付いたのがHexoだったというだけです。記事がMarkdownでかけるのもいいですね。なのでもっといいツールが見つかれば移行するかもしれませんが、しばらくはHexoと仲良くやって行こうと思っています。目下の悩みはテーマをどうするかです。デフォルトのlandscapeも拡張しやすくて悪くはなかったのですが、せっかくこれだけのテーマが公開されているので色々と試したいと思っています。6。 6. まとめまとめです。Hexoの箇所は静的サイトジェネレータに置き換えても大体合ってます。３行を目指しましたが、なかなか難しいですね。 Hexoは静的サイトジェネレータ。生成されたファイルをWebサーバにアップロードする必要あり Hexoはローカルで編集・確認ができるので、心地よい Hexoはバージョン管理と相性が良く、こまめにコミットで安心できる Hexoはセキュリティ的に動的サイトに比べて安心 Hexoは非エンジニアに基本向かない HexoでRDBはコメント機能とかトラックバックとかサーバサイドの処理が必要なものは基本使えない 7. 補足前述の通りでHexoを最初に選んだのは私にとって簡単そうに見えたからです。だけどそう見えたのは私の好みや経験という色眼鏡があったからなので、申し訳ないですがこのブログを読んでくれた方に当てはまるかどうかは分かりません。もちろん世の中にはHexo以外にも山のように静的サイトジェネレータがあるので、余力のある人にはぜひ以下のサイトを参考に自分にあった運命の静的サイトジェネレータを探し出して欲しいです。。。7 StaticGenStaticGen is a leaderboard of the top open source static site generators. Promoting a static approach to building websites. 1.Hexoは「ヘキソ」と発音しています。正しいかどうかは分かりません。 ↩2.JavaScriptの場合は自分も含めて、サイトを訪れた人が被害者もしくは加害者(踏み台にされた場合)になります。 ↩3.テーマを弄りはじめるとエンジニアでも頭を抱えそうですが・・・ ↩4.例えばコメント機能はDisqusと連携すれば実現できます。 ↩5.SPA = Single Page Application, SSR = Server Side Rendering ↩6.現在このブログで利用しているテーマはフッターを参照してください。テーマは今後変わる予定があるのであえて本文には記しません。 ↩7.願わくばこの記事を読んだ人が静的サイトジェネレータの旅に出て、ブログを書いてくれてそれが、私の目に止まりますように・・・ ↩","link":"/cats-cats-cats/2018/12/02/start-blog-hexo/"},{"title":"JapanContainerDays v18.12 に初参加","text":"12/4(火)にJapanContainerDays v18.12に初参加しました。このイベントは春に1回目を開催して今回で2回目の開催だそうですが1、会場には800人以上の人が詰め掛けたようで非常に盛況でした。 JapanContainerDays v18.12[12/3-5開催]コンテナ活用/クラウドネイティブの現状をひとまとめにした開発者のためのイベント - JapanContainerDays 目次1. 会場の様子2. キーノート3. 参加セッション一覧3.1. 24日参加セッション3.2. 25日参加セッション4. 食事5. 戦利品6. 感想とまとめ 1. 会場の様子会場は御茶ノ水のソラシティカンファレンスセンターでした。ここには以前にデブサミ夏や大江戸Ruby会議06に参加した時に来たことがあったので特に迷うことなく到着しました2。10時開始だったのですが念の為30分早く会場入りしたのでキーノートの会場はまだ半分近く空いていました。 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 2. キーノートさすがにキーノート開始直前には満席近くになっていました。キーノートは会社やコミュニティの代表が順番に登壇する形式で2時間行われました。その中でなんといっても目玉はCNCFのCOOであるChris Aniszczykさんの発表だと思います。 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 CNCFの歩みや今後の展望が語られていました。気になったのはIoTやEdgeにもKubernetesが進出するという話題でしょうか。KubeEdgeには注目していきたいと思います。あとはどんどんServerlessやNodelessに進んでいく方向性が強調されていました。virtual-kubeletの紹介もあり今後が非常に楽しみです。 kubeedge/kubeedgeKubernetes Native Edge Computing Management Framework - kubeedge/kubeedge virtual-kubelet/virtual-kubeletVirtual Kubelet is an open source Kubernetes kubelet implementation. - virtual-kubelet/virtual-kubelet あと、クラウドネイティブの定義も紹介されていました。今までクラウドネィティブとは何ぞやと思っていたので少しはもやもやが晴れたような気がします。 クラウドネイティブテクノロジは、パブリック、プライベート、およびハイブリッドクラウドなどの最新のダイナミックな環境でスケーラブルなアプリケーションを構築および実行するための組織の能力を強化します。コンテナ、サービスメッシュ、マイクロサービス、不変インフラストラクチャ、および宣言型APIは、このアプローチの例です。 これらの技術は、復元力があり、管理しやすく、観測可能な疎結合システムを可能にします。堅牢な自動化と組み合わせることで、エンジニアは頻繁に、そして予想通りに影響の少ない変更を最小限の労力で行うことができます。 クラウドネイティブコンピューティング基盤は、ベンダーに依存しないオープンソースのプロジェクトのエコシステムを促進し維持することによって、このパラダイムの採用を推進しようとしています。最先端のパターンを民主化し、これらのイノベーションを誰もが利用できるようにします。 クラウドネイティブの定義(Google翻訳を利用)github.com/cncf/toc/blob/master/DEFINITION.md あとはCNNFの歩き方や全体像も紹介されていました。 CNCF Cloud Native Interactive LandscapeFilter and sort hundreds of cloud native projects and products, and review details including GitHub stars, funding or market cap, first and … Trail MapはともかくLandscapeは圧巻ですね・・・ まぁその中でもCNNFが直接ホスティングしているのはごく僅かです。これを見ると全部で30程ありますが、現時点では成熟度のが最高のGraduatedになっているのはKubernetes、Prometheus、Envoyのわずか３つです3。これからクラウドネイティブが浸透していく中でこれらのプロジェクトがどの様になっていくのか注視していきたいと思います。 キーノートには他にも面白い発表がいくつもあったのですが、印象に残ったのはメルカリの発表でした。なぜコンテナオーケストレーションにKubernetesなのかという問いに対して拡張性とエコシステムを挙げていましたが、これと同じ答えはこの後に続くセッションでも繰り返し聞くことになりました。そしてこの答えがOSSで勝ち抜くための到達点なんだという気がしました。シンプルで直交的で整合性のとれた拡張性で素早くエコシステムを構築すること。言葉にすると短いですがこの状況をわずか数年で作り上げて決着までほぼつけてしまうとは、改めてKubernetesの成し遂げたことの凄さを実感しました。 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 3. 参加セッション一覧とりあえず参加セッションを列挙してみます。メモったキーワードを記載していますが、あやふやな部分も多く含むためさらっと流していただけると幸いです。 3.1. 24日参加セッション keynote CNCF Microservices on Kubernetes at Mercari（Mercari） Kubernetesによる機械学習基盤への挑戦（Preferred Networks） LINEエンジニアを支えるCaaS基盤の今とこれから（LINE） Cloud Nativeの未来とIBMの取組み （IBM） クラウドネイティブで作る、新しいクルマの世界（デンソー） ZOZOTOWNシステムリプレイスにおけるKubernetes活用（ZOZOテクノロジーズ） コンテナネットワーキング（CNI）最前線 コンテナネットワーキングは闇が深い、動きが早い、スケーラビリティに注意 Kubernetes ネットワーキングのすべて Services, Ingress, NetworkPolicy 40 topic of Kubernetes in 40 minutes serviceでなくingressを使え、latestタグは使うな、DockerHubのイメージは信用するな、バージョンアップは容易にするな、ボリュームは使うな、全機能を使う必要はない、ingressはGAではない Ansible、Terraform、Packerで作るSelf-Hosted Kubernetes Kubernetesから始めるクラウドネイティブエンジニアへの道 〜 Kubernetesトレーニングと、CKA/CKAD資格取得に向けて 〜 構築ツールを使わずにやってみた(kubernetes the hard way)、k8sはCloud Nativeにおいてはスターティングポイント 2019年はコンテナよりもクラウドネイティブ!? Knativeのすべて コンテナ辛い！そこでknative, カナリアリリースが楽、riffもあるよ After Party &amp; Booth Crawl !! 3.2. 25日参加セッション 2020年のコンテナはどうなる!? コンテナプラットフォームのこれまでとこれから マイクロサービスは組織論に行き着くので難しい k8sは拡張性の高いOSようなもの K8sは開発やPOCまではうまくいくが本番運用に課題あり istioがここまでくると思っていなかった。サービスメッシュはエンタープライズにこそ必要 cloudfoudry,istio,mesoss,open shift,rancher,rio, core os,kubeflow, knative マイクロサービスの高可用性：Ingress, サービスメッシュの世界におけるロードバランシング nginx社は実在する plusもあるよ 複雑になったWebを簡素化したい fablic modelではすべてのappにサイドカーとしてnginxが入る Dockerセキュリティ: 今すぐ役に立つテクニックから，次世代技術まで 鍵をイメージに入れるな、--ssh,--seacretを使え。使えない場合はスカッシュやマルチステージというワークアラウンドを使え イメージスキャナ - clair, aqua microscanner 誤検知もあるので信用しすぎるな dockerソケットに気をつけろ。dockerグループに入れるのは危険 コンテナ is namespace + capabilities + cgroups SELinux無効化するときは「石川さん、Walshさんごめんなさい 」と唱えてから実行 Kubernetesと暮らすRancherな生活 rancherはk8sのオーケストレーション層ではなくその上のストラテジー層 2.0でk8s一本になり、Pure Goになり、マネージドもOKになりカタログがHelmになった rioはおもしろそうだがまだかなり柔らかい。k8sを意識しない時代に・・・ MeetUpを活性化せよ！最強のリアルタイムQA投稿アプリをCloud_Nativeにつくってみた - Qicoo - 自演が可能です - eks,ec2,elastic cache, rds,cloud flront, route 53,cert manager, elb, travis ci, kustomize, hepioak, spinnaker,kanyeta,prometheousOperator, Halyard - Cloud Native Developers JP - Cloudcraft – Draw AWS diagrams コンテナ時代のOpenStack Kubernetes Meetup Tokyo 2年間の振り返りと未来 参加者の規模数がすごい 登壇者限定で濃い話をする会がある 登壇してください 自分が参加したセッション以外は以下にまとめがあるのであとで読みたいと思います。 JapanContainerDays v18.12 matome – JapanContainerDays Team – MediumJapanContainerDays v18.12 公式資料まとめ 4. 食事昼食はランチセッション中に配布されたサンドイッチやまい泉ヒレかつサンドを食しました。 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 お菓子やドリンクも無料で楽しむ事ができました。ContinerDaysのロゴが入ったマカロンが可愛かったです。 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 After Partyではビールやワインや焼酎をの呑みながらワイガヤしてました。急遽決まったLT大会では個性あふれる様々な会社がHireingトークをしていました。 撮影：JapanContainerDays実行委員会photos.app.goo.gl/1X6PJEyijBNLTZrm6 5. 戦利品勢い余って電子書籍3冊も買ってしまいました。面白かったのはNGINXで配られたUSBケーブルです。正直そのタコ足のような発想はありませんでした(笑) 6. 感想とまとめ参加したことでCloudNativeがどこまできているか肌で実感できた気がしました。自宅ではminikubeからGPUを触れる環境を構築していますが、いまいち有効利用できていない気がしていたので、このイベントを機会に手を動かしながらいろいろとCloudNativeに近づけて見たいと思います。 Kubernetesの一人勝ち 今後はKubernetesのエコシステムの何処を占めるかの戦い サービスメッシュ(Istio)がかなり熱い Helmもデファクトになりそう knative, virtual-kubeは注視したい 機械学習のインフラとしても面白そう Kubernetesは本番運用に課題あり knative, OpenShift, Rancher等さまざまなアプローチで解決しようとしている 最終的にはNoOpsやサーバーレスやFaaSな未来に行き着くのだろう・・・（時期未定） 来年はCloudNative Days1.JapanContainerDaysは2回目にして、今回で最終回だそうです。次回からはCloudNative Daysに変わるそうですがCloud Native Days Tokyoとの関係性はよくわかりません・・・ ↩2.駅から徒歩1分なので、そもそも迷うほうが難しい気もします・・・ ↩3.というかPrometheusはCNNFだったとは初めて知りました・・・ ↩","link":"/cats-cats-cats/2018/12/06/container-days/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/cats-cats-cats/tags/Hexo/"},{"name":"Web","slug":"Web","link":"/cats-cats-cats/tags/Web/"},{"name":"Container","slug":"Container","link":"/cats-cats-cats/tags/Container/"},{"name":"k8s","slug":"k8s","link":"/cats-cats-cats/tags/k8s/"}],"categories":[{"name":"Tech","slug":"Tech","link":"/cats-cats-cats/categories/Tech/"},{"name":"Web","slug":"Tech/Web","link":"/cats-cats-cats/categories/Tech/Web/"},{"name":"Container","slug":"Tech/Container","link":"/cats-cats-cats/categories/Tech/Container/"}]}