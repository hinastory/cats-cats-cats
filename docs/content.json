{"pages":[{"title":"お探しのページは見つかりませんでした。","text":"","link":"/cats-cats-cats/404.html"},{"title":"about","text":"hinastoryのブログです。興味のある技術を中心に記録していきます。 本ブログの著作権は、引用元が他所と分かる文章と画像を除いて、hinastoryが保持しています。本ブログ内のhinastoryが著作権を有する記事と画像(cats cats catのロゴ画像を除く)はCC BY 4.0()で公開されています。 cats cats catsのロゴ画像は本ブログのシンボルですので、本ブログを引用元として明示したい場合にご利用できます。それ以外の用途での利用はご遠慮ください。 本ブログに関するお問い合わせは以下へのメールでお願いします。","link":"/cats-cats-cats/about/index.html"}],"posts":[{"title":"ようこそキーマップ沼へ","text":"以下のErgodash miniの記事では書ききれなかったキーマップについて紹介します。 サイレントでホットスワップなErgoDash miniを制作(前編) サイレントでホットスワップなErgoDash miniを制作(後編) 目次1. そうだ、キーマップをいじろう！2. QMK Firmware辛い問題3. 僕が考えた最強のキーマップ 1. そうだ、キーマップをいじろう！自作キーボードを始めた理由の一つがキーマップを自由にいじりたいという動機からでした。もともと英語キーボードが好きでしかも「A」の横がCtrlしか許せない派だったので色々と苦労していました。キー配置を自由にできたらと何度夢見たことか・・・ しかし、自作キーボードを手に入れたことで状況は一変しました。QMK Firmwareというものを使えばキーマップを自由にイジり放題だと言うのです。思えばCtrl以外にもいろいろと入れ替えたいキーがあるのでぜひ色々と試してみたいとQMK Firmwareを触りはじめました・・・ツライ・・・ 2. QMK Firmware辛い問題まず、簡単にキーマップを書き換えるために何をすればいいか簡単に説明すると、前述のQMK Firmwareの主にkeymap.cを書き換えて、ビルドと転送を行います。これだけだと簡単に聞こえるかもしれませんが、修正しなければイケナイのはC言語ファイルなんですよね・・・ちょっと記述を間違えると謎のコンパイルエラーに出くわして頭を抱えたりします。あと、最初はQMK Firmware独自の概念に悩まされたりします。レイヤーとかレイヤーとかレイヤーとか・・・ 例えばErgodash miniで光っているLEDを消したいとしましょう。どうすればいいのかというとQMK Firmwareには特殊キーが定義してあってそのキーを押すとシフトキーみたいにキー全体の定義を変更させる機能があります。これがレイヤーと呼ばれていてこのレイヤーは複数定義できるので単純なキー数の何倍もの定義が必要になったりします。Ergodash miniには初期設定でQwertyとRaiseとLowerとAdjustの4つが定義されていて、デフォルトのレイヤーはQwertyになります。話を元に戻すと、LEDを消すためににはAdjustレイヤーの「RGB ON」とコメント書かれているキーを押さないといけないのですが、このレイヤーを出現させるためには何とLowerキーとRaiseキーの同時押しが必要になります。完全に初見殺しですね。しかも、これはQMK Firmware標準機能というわけではなく一部のキーボートで採用されている方式です。keymap.cの後ろの方にさり気なくC言語の関数で実現されています。 もう何というか、何とかして欲しいですね・・・自作キーボードなんだから自分で何とかするのが筋なのは分かっていますが、ちょこっとキーを修正したい場合にいちいちCファイルを修正してビルドと転送を繰り返すのはかなり面倒です。Ergodash miniの場合は自分が見てきたkeymap.cの中では比較的見やすい方でしたが、レイヤーを自分好みにするために全面的に書き換えたのでかなり大変でした・・・一応QMK ConfiguratorというWebベースのツールもあるみたいですが、まだまだ機能が足りていないというかそもそもErgodashのような物理キーの変更はどうするのかとか課題がありそうです。自分はレイアウトの確認のみに利用しています。 3. 僕が考えた最強のキーマップ前置きが長くなってしまって申し訳ございません。以下が「僕が考えた最強のキーマップ」です(笑)。 以下がキーマップのポイントです レイヤーは４つ Qwertyレイヤーは通常配列 Lowerレイヤーはカーソル移動 RaiseレイヤーはNum Padと記号 AdjustレイヤーはBacklight調整とファンクションキー スペース、エンター、バックスペース、シフトを親指で押す 左手親指でレイヤー切り替えて、右手でキー入力 日本語入力切り替えはMacスタイル(英数キーでIMEオフ/かなキーでIMEオン) Adjustレイヤーは同時押しが嫌だったので専用キーを割り当てて、ここにファンクションキーも押し込んでいます。LowerとRaiseの使い方特殊で基本的に左手親指でレイヤー切り替えのキーを押して右手でキーを打つスタイルです。Lowerレイヤーの出し方も特殊でスペースキーの長押しかEnterキーの長押しで出すようにしています。Enterキーにも割り当てた理由は右手だけでカーソル移動ができるようにするためです。そして自作キーボード界隈では親指酷使スタイルです。このスタイルになれると小指の負担が軽減されてキータイプしやすくなったと感じています。 自分は他にもErgo42やIrisやPlanckキーボードも持っていますが、直行配列のキーボードは大体こんな感じのレイアウトで統一しています。以下にキーマップを公開しているので気になる人は参考にしてみてください。 hinastory/qmk_firmwarekeyboard controller firmware for Atmel AVR and ARM USB families - hinastory/qmk_firmware","link":"/cats-cats-cats/2019/01/12/keymap/"},{"title":"GitHubのプライベートリポジトリに移行した話","text":"新年そうそうビッグニュースが流れてきました。GitHubがプライベートリポジトリをタダでつかわせてくれるってよ! GitHub、無料ユーザーもプライベートリポジトリを使い放題にGitHubが、無料ユーザーもプライベートリポジトリを無制限に使えるようにした（共有は3人まで）。料金体系は変わらないが、有料プランの名称も少し変わった。 目次1. これまで2. なんでそんな運用にしていたのか？3. 現在4. まとめ 1. これまでこれまではパブリックなリポジトリはGitHubにおいて、プライベートなリポジトリは自宅のKubernetes上にGitBucketを立てて、そこに置いていました。 gitbucket/gitbucketA Git platform powered by Scala with easy installation, high extensibility & GitHub API compatibility - gitbucket/gitbucket 2. なんでそんな運用にしていたのか？Gitを使っているとなんでもGit管理したくなってきました。しかし、パブリックにおいても良いデータはGitHubで問題ありませんでしたが、どうしてもパグリックにしたくないデータもGit管理しようとすると困りました。GitHubは当時プライベートリポジトリを使うために月$7も必要だったのです。払えないわけではないですが、流石にちょっとしたデータを管理するためには高すぎるなぁと感じて躊躇していました。それではGitLab等のプライベートリポジトリが無料で使える所にしようかとも考えましたが、さすがにパブリックなリポジトリをGitLabに移行すると色々とリンクが切れて面倒なので諦めました。 それではプライベートなリポジトリだけGitLab管理にすればいいかというと.gitconfigに登録してあるメールアドレスの切り替えが面倒でした。GitHub上に公開しているコミットログに実運用しているメールアドレスを残すのは嫌だったのでGitHubのnoreplyメールアドレス(1696779+hinastory＠users.noreply.github.com)を設定していましたが、それをGitLabではそれを切り替える必要があります。最初はローカルのgitconfigで対応しようとしましたがリポジトリ毎に設定しければならず面倒すぎました。 そして結局、自宅にGitBucketを立てて運用するに至ったわけで、自宅のファイル管理の大体のニーズは満たせました。しかし、それでもやっぱりプライベートにフォークして落ち着いてからパブリックにしたいとかはやりたいわけです。そんなこと考えながらここ数年もやもやしていましたが、ここに来てやっと素晴らしいニュースに巡り会いました。 3. 現在GitBucketにあったリポジトリを全てGitHubのプライベートリポジトリに移行しました。 移行については簡単でGitHubでまず画面右上の+ボタンからNew Repositoryを選択するとリポジトリの作成画面にが表示されます。そしてその画面でラジオボタンでPrivateを選択します。このときInitialize this repository with a READMEを選択しないでください。これを選択すると既存のレポジトリのpushができなくなります。 上記の画面でCreate repositoryを実行すると以下の画面が表示されるので、あとは既存のリポジトリ上で赤枠で囲った手順を実行するだけで移行は完了です。 一応注意点を上げるとすれば、プライベートなデータを上げる場合、最低限2段階認証は有効にしておくべきす1。2段階認証用のアプリには自分はGoogle Authenticatorを利用しています。 4. まとめGitHubにリポジトリを統一できて幸せになれました。GitHubがMicrosoftに買収されたときはどうなることやらと思いましたが、この決断はGood Jobと言わざるを得ません。恐らくGitLabへの対抗処置だとは思いますが、今後も競い合ってより良いサービスになってくれることを願って止みません。1.プライベートなデータを上げなくてもセキュリティのために2段階認証はオススメです。 ↩","link":"/cats-cats-cats/2019/01/13/github/"},{"title":"サイレントでホットスワップなErgoDash miniを制作(前編)","text":"2018年のキーボード納めとして、年末にErgoDash miniを組みました。ただ普通に作ったのでは成長がないので、以前よりやってみたかった静音化とキースイッチとProMicroのホットスワップ化に挑みます。 omkbd/ErgoDashkeyboard. Contribute to omkbd/ErgoDash development by creating an account on GitHub. 目次1. はじめに2. ErgoDash miniとは3. 制作工程3.1. 潤滑剤の塗布3.2. MogeMicro対策3.3. ダイオードの取り付け3.4. TRRSジャックとリセットスイッチの取り付け3.5. Undergrow LEDの取り付け3.6. 後編へと続く・・・ 1. はじめにこの記事は自作キーボード初心者から中級者向けの記事です。ただ「初めての自作キーボード制作」の場合、静音化とホットスワップ化は難易度が高い箇所があるので、まずはシンプルに一台目を組み上げて自信をつけてから挑戦することをオススメします1。実際の制作には公式のビルドガイドを熟読した上で進めてください。この記事は静音化とホットスワップ以外にもビルドガイドの行間とも言える一般的に躓きやすい箇所も説明を入れるように心がけました。これから作業する方の参考に少しでもなれば幸いです。 2. ErgoDash miniとは国内で購入可能なキーボードキットです。もともとErgoDashというものがあってそれよりもキーが一行少ないバージョンが今回制作したminiです。キーボードの特徴としては左右分離型で、一部の物理的なキー配置をカスタマイズすることができます。キー数は52～56キー（最下段をカスタマイズ可能、最大100パターン）です。ケースの関係上、親指あり/なしは購入時に選択する必要があります。 ErgoDash miniドキュメントより引用元 販売元 だっしゅきぃぼぉど - BOOTH ビルドガイド ErgoDash mini Build Guide 3. 制作工程実際に自分が行なった手順通りに書いていきます。前述のとおり公式のビルドガイドに含まれていない手順もあります。 3.1. 潤滑剤の塗布キーボードの静音化は主に以下の３つの対策があるようです。 静音用キースイッチを使う キースイッチ自体に静音化対策が施されています 潤滑剤を使う キースイッチを分解して、擦れる箇所に潤滑剤を塗布します スタビライザーを利用する場合は、スタビライザーにも塗布します O-ringを使う キーを強く打ったときの底打ちの音を抑えるものです 今回は上記の3つとも実施しました。まずはキースイッチを買うところからですが、今回はGateron Silent スイッチの赤軸を利用しました。Cherry MX互換のサイレントスイッチは他にも色々ありますが、とりあえず手っ取り早く入手できるものを選びました。今回キースイッチをホットスワップ化するので、まずは手持ちのキースイッチで初めて後で交換でも良いです。 次にキースイッチに潤滑剤を塗布します。lubeするとも言います。潤滑剤にも色々ありますが無色透明でプラスチックと金属に塗布可能なものから選択すれば良いです。どの潤滑剤がいいかは正直好みになります。音もそうですが打ち心地にも影響します。塗布箇所や塗布量によっても変わってくるのでいろいろなパターンで研究してみるのが一番いいかと思われます。今回は潤滑剤にKrytox GPL 105を使用しました。実際の塗布作業ですが、一つ一つキースイッチを分解して潤滑剤を筆で塗る作業です・・・長く・辛い作業です・・・しかしこの苦痛を軽減するために以下の素晴らしい治具の数々があります。キースイッチオープナーはほぼ必須ですが他も揃えておいたほうが断然楽です。自分の場合、以下の治具を使って2時間かかりました2。 キースイッチオープナー スイッチステムホルダー キースイッチオープナー用オプション スイッチ Lube Station 以下の写真は実際にlube作業中の風景です。キースイッチオープナーで必要なキースイッチの個数を分解して、パーツごとに選り分けておきます。その後スイッチの下側部分をLubeステーションにはめ込みます。あとは下側部分に一気に塗布した後、バネと軸を順番に塗布して下側部分に乗せて、最後に上部を戻して完成です。 3.2. MogeMicro対策これも公式ビルドガイドには書いていませんが、大事なことなので記載しておきます。キットに付属しているPro microはMogeMicroという蔑称を授けられるほど、USB端子部分が破損しやすいです。何も対策をしないと何回かケーブルを抜き差ししているうちにポロリと逝ってしまわれます。対策は自分の観測範囲で以下の4つがありました。今回は1.を実施しておきます。2.も合わせて購入しておけばさらに安心です。3.はお金に余裕がある人向けです。4.はここを読まれている方にはとりあえず無視してもらって構いません・・・気になる方は調べてみてください。 エポキシ系樹脂で固める 磁石で着脱可能なmicro USBケーブルにする Pro micro スイッチサイエンス版を買う BLE Micro Proを使って無線化する エポキシ系樹脂は２つの液剤を混ぜて使うタイプのものです。よく混ぜたらUSB端子の側面に盛って行きましょう。注意点としてはスルーホールに液剤が流れ込まないようにすることと、USB端子の上部に液剤を盛るとケースに干渉するので側面だけにしておくことです。もちろんUSB端子も塞いではいけません(笑)。液剤が固まるまでそこそこ時間がかかるのでMogeMicro対策は組み立て工程の最初に行っておくのがオススメです。 3.3. ダイオードの取り付けダイオードはキットに標準で付属するスルーホールに挿して使うタイプのものを使用します。表面実装タイプ(SMD)のものも利用できそうですが、はんだ付けの難易度がぐっと上がるので今回は見送りました。ダイオードを取り付ける前にダイオードの足を曲げる必要がありますが、正しい長さで曲げないとスルーホールにきちんと嵌らないので楽をしたいなら治具(リードベンダ ー)を使うことをオススメします。 ダイオードの足を曲げ終えたら一度PCBに全て挿してダイオードの向きが間違えていないか、挿し忘れがないか確認します。ここは本当に何回も見直したほうが良いです。はんだ付けしたあと間違いを見つけると心が折れてしまいます・・・あとErgoDashではダイオードの隣に抵抗のスルーホールがある箇所があるので差し間違いが容易に起こりえます。公式のビルドガイドの写真で色分けされているのでしっかりと確認しましょう3。ダイオードの確認時はツールクリッパーという治具が役立ちます。下の写真のように基盤をツールクリッパーで固定すればダイオードを挿す工程と確認工程が非常に楽です。電子工作をしていると時々腕が足りなくなるので、とりあえず持っておいて損はないと思います。 ダイオードの確認が終わったらマスキングテープでダイオードを仮止めしてからはんだ付けに入ります。上の写真ではマスキングテープの代わりにカプトンテープを使っています4。ここからはようやくはんだ付けの作業です。今回は有鉛はんだを用いました。鉛は有害なので作業中は煙をなるべく吸わないようにしてこまめに換気しながら作業しました。はんだ付けは温度が命と言われていますので温度調整機能付きのはんだごてを使用します。ただし標準のの小手先だと母材に熱が伝わりにくいため小手先をC型のものに変えました。はんだ付けのコツは母材を温めてからハンダをそっと近づけて溶かして流し込む感じなそうですが、言葉だけでは伝わりにくいので一度YouTube等ではんだ付けの動画を検索してみることをオススメします。 3.4. TRRSジャックとリセットスイッチの取り付けTRRSジャックとリセットスイッチの取り付けは公式のビルドガイドの通りに実施すれば問題ないはずです。基盤の裏側に取り付けることだけを気をつけていれば十分です5。公式のビルドガイドではこの手順の前にオプションとしてBacklight LED用のパーツ取り付けがありますが、今回はBacklight LEDは取り付けないのでスキップします。というのも、Backlight LEDはスイッチの上から挿さないといけないため、スイッチをホットスワップにするとLEDもホットスワップにしないといけませんが今回はそこまで手が回りませんでした6。 3.5. Undergrow LEDの取り付けBacklight LEDに関しては一旦保留にしましたが、やはり光らせたいという欲求はあるのでUndergrow LEDを実装します。今までテープ型や砲弾型のLEDは実装したことがありましたが、チップ単体での実装は初チャレンジです。チップは公式で案内されているとおりWS2812Bを電子工作の強い味方、秋月電子さんで購入しました。初期不良や取り付け途中で壊してしまうことも考慮して5セット分余分に購入しました。汎用LEDなので余った分は他の電子工作で使う予定です。 公式のビルドログのとおりUndergrowを有効にするにはマスター(USBを挿す方)を決めて、はんだでジャンパする必要があります。このはんだだけでジャンパさせる方法も最初は慣れませんでしたが、ショートさせたいランドの双方にはんだを盛った後(予備ハンダ)、はんだを供給しながら小手先で盛ったはんだを溶かして繋ぐように動かせばうまくいくようになりました。そしていよいよLEDのはんだ付けですが、意外とLEDが小さいので思ったよりは面倒でした。取り付けの際に注意したほうがいいと思ったのは以下の3点です。 LEDの方向に注意する LEDが浮かないように注意する LEDを熱で壊さないようにする LEDには方向があります。公式のビルドガイドを見て方向を間違わないようにしましょう。LEDは直列につながっていて、ErgoDash miniではマスターの内側から外側に向けてぐるっと回って、反対側の基盤の外側から内側に向けて繋がっている感じです。LEDの方向がわかったらマスキングテープでチップの片側を固定します。このときチップが浮かないように確認してください。チップが浮いてしまうと接続不良になる恐れがあります。マスキングテープは片側のはんだが終われば剥がして、もう片側をはんだします。また、LEDは非常に熱に弱いみたいです。有鉛はんだではんだ付けする場合340℃から360℃に温度を調整するのが一般的ですが、今回は260℃でなるべく短時間ではんだ付けするように意識しました。はんだの方法はまず軽くランドを温めてはんだを盛った後、素早くチップの電極に触れてはんだを接着させました。電極にふれる時間はほんの一瞬です。 3.6. 後編へと続く・・・後編ではいよいよPro Microとキースイッチのホットスワップ化に挑みます。 サイレントでホットスワップなErgoDash miniを制作(後編)1.1台目はシンプルなものでも、いろいろ反省点や改善点が目に付きます。また、シンプルなものを知らないと何が良くなったのがわからないので、お楽しみは２台目以降にとっておきましょう。自分はこれで4台目ですが腕はまだまだです・・・ ↩2.アニメを見ながらだったので実際はもっと短く済むはずです・・・ ↩3.実際私は再確認で合計3箇所の間違いを発見しました・・・過信は禁物です。 ↩4.カプトンテープは絶縁にも使えるので持っておいて損はないです。 ↩5.基盤は右手側と左手側で裏表が逆になるので注意が必要です。 ↩6.公式のビルドガイドにありませんが、チップLEDにする方法もあるのでBacklight LEDに関しては後で検討します。。。 ↩","link":"/cats-cats-cats/2019/01/06/ergodash-mini-1/"},{"title":"気が付いたら本棚がキーボード棚に変わっていた話","text":"この記事は自作キーボード #2 Advent Calendar 2018 12日目の記事です。自分はゆるふわでキーボードを楽しみたい勢なので、カジュアルにキーボードを楽しむ方法について書いてみたいと思います。ガチなモノ作りの記事はすでに多くの人が書かれていると思うので、その途中で箸休め的に読んでいただけると幸いです。 自作キーボード #2 Advent Calendar 2018 - Adventar書きたいのに枠がないという方のための2枚目です。 [その1](https://adventar.org/calendars/2954) [その3](https://adventar.org/calendars/3208) 「皆さん、EndGameしていますか？」 日本の自作… 目次1. 自作キーボード以前2. 自作キーボードに興味を持つ3. 発狂する4. 自作キーボードの門を叩く5. キーボード棚の作り方6. デコキーのすすめ7. 最後に 1. 自作キーボード以前キーボードにこだわりを持ち始めたのはコンパクトなキーボードを探し始めてからでした。もう15年以上昔の話ですが、その時出会ったのがぷらっとホームが販売していた以下のFKB8579です。 気持ち良い打鍵感で10年以上愛用していました。右側の画像はキートップを外したところですが、キースイッチはメンブレンシートです。最近はCherry MX互換やロープロのスイッチしか触っていなかったのでこういうのを見るとほっこりします。大切に使ってきたのでまだ使えますが、さすがに引退させてあげたいと思ったので次に飛びついたのがARCHISSのProgresTouch RETRO TINYです。メカニカルキーボードでコンパクトなタイプを探していたらちょうどこのキーボードが発売直後だったので購入しました1。 2. 自作キーボードに興味を持つProgresTouch RETRO TINYは打ち心地がよく気に入っていたのです、去年あたりから自作キーボードが盛り上がっていると言う噂を聞くようになりました。ただ、はんだ付けが面倒そうだったので様子見していましたが、キー配置のカスタマイズが自由にできるとういうのはやってみたいと思っていました。 しかしその瞬間は唐突に訪れました。去年の11月ごろMassdropからPlanck Lightが買えるという情報が流れてきたのです。もちろんこのときMassdropもPlanckキーボードのことも欠片も知りませんでしたが、以下の動画を見て一発でやられてしまいました。 やっぱり光るのずるいですね（笑）。あと完成品も販売してくれるとのことだったので、懸念だったはんだ付けも必要がないことも大きかったです。これで念願のキー配置を自由にいじれるということで即座にDropに参加しました。ただこれが過ちの第一歩だとは知らずに・・・発送予定は2018/5/18となっていて、このときまだ半年先だったので気長に待つことにしました・・・待つことにしたのですが、Massdropのやつは毎日のようにダイレクトメールを送りつけてきます。無視すればいいだけのことなのですが、ときどき GMK Red Samurai のような耐え難い誘惑があり、Dropに参加させられました・・・ 3. 発狂する5月初旬にMassdropから一通のメールが来ました。PCBの生産でトラブっていて発送が7月初旬になるということでした。楽しみにしていただけに落ち込みましたが、既に半年近く待っていたのであまり気にしない方向で精神を落ち着けました。ちなみにこのときはまだ自分がはんだ付けをすることになるとはまだ考えていませんでした。このときまでにQMK firmwareが動作する完成品を販売している場面を何回か見ていたのでこれが気に入らなかったら別のを買えばいいと考えていたからです。時が流れて6月に入り大分そわそわしてきたので、GitHubからQMK firmwareのリポジトリをフォークしてキーマップをいじり始めました。このキーマップを考えている瞬間は最高に幸せでした。。。 そしてとうとう7月に入り我が家にPlanck Lightがやってきました。Macにつないで打ってみて動作は問題なさそうでした。そして色々と光らせてこのときは大分テンションが上がりました。そして念願のQMK firmwareを書き込むときが来ました。しかし、不思議なことにfirmwareが書き込まれてくれないのです。何回も試しました。何回も、何回も・・・困り果ててMassdropのDiscussionを覗いて見ると、なんとブートローダを書き込むのを忘れたからキー配置をいじれないという旨が公式からアナウンスされていました・・・ 発狂しました 4. 自作キーボードの門を叩く選択肢はいくつかありました。幸いというか当然というか公式はISPフラッシャーを設計して送ると言っていました。しかしながらこのときは完全に疑心暗鬼になっていて楽観的に待つ気にはなれませんでした。実際に公式の対応は非道いもので、一週間何の音沙汰もないこともしばしばで毎週Discussionで誰かが進捗を尋ねていましたが無応答がほとんどで、罵声が飛ぶような殺伐としてた雰囲気でした2。２つ目の選択肢は自力でブートローダを書き込むことです。一応成功した人もいるようなので試してみる価値はありましたが3、いきなり壊したら立ち直れそうになかったので、諦めて今まで避けてきた第三の選択肢を取ることにしました。 ここに来てようやく自作キーボードの門を叩く決心をしました。本当に長くなってすいません・・・決心したら行動は早かったです。 Ergo42 を注文して4、秋葉原のマルツではんだごてやテスター等必要な道具を揃えて、届いたらすぐに組み立てはじめました。しかし結局動かなかったのでDiscordの自作キーボードのサーバーの初心者チャンネルで色々な人に助けてもらいながら何とか動作させることができました。このときの感動は何とも言い難いですね。あのとき善意で助けいて頂いた方々には本当に感謝しています。そして辛かったけど本当に乗り越えられてよかったです。 この後は数字キーが欲しくなってIrisに手をだしました。 上のキーボードがIrisで下のキーボードがErgo42です。両方共46キーだったのでこの写真は「46キー姉妹」というタイトルでDiscordに投稿しました。しかし何というかあれだけ欲しかった数字キーも慣れてくるといらなくなりました・・・結局手首をなるべくリストレストに固定して打つようになるため指が届きにくいキーは不要みたいな感じになりました。 このあとに作ったのはMint60です。Maker Faire Tokyoで買い損ねたので、コミケに始発で乗り込んでゲットしてきました。 オシャカワなキーボードが手に入ってとても嬉しかったのですが、残念ながらこの頃には指がOrtholinearに慣れてしまっていて、Row-StaggerdなMint60は既に打ちづらくなっていました・・・もう少し出会いが早ければ最高の相棒になったかもしれませんが、現在は布教担当として働いてもらっています。 だいたいここまでが自作キーボードを作り始めて1ヶ月くらいですが、一気にモノを増やしすぎたため置き場所に困るようになってきました。もちろんただ積み重ねるだけならできるのですが、キーキャップやスイッチ等は探しやすく見比べやすいようにしたい欲求が高まってきたのでキーボード棚を作ることにしました。 5. キーボード棚の作り方まずは本棚をご用意ください(笑)。いきなり落ちからはじめて申し訳ございません。実際に自分のキーボード棚は本棚の流用なのでこれ以上何も言うことはないのですが問題が一つありまして、もともとこの本棚には捨てられない本5がぎっしり詰まっていたのです。そこでひたすら 自炊を頑張りました。 一気に100冊程自炊したので大分消耗しました。上の写真は自炊道具で、どこのご家庭にもあると思わるごく普通の裁断機とスキャナです6 。ブログ先頭の写真は自作キーボードをはじめて2ヶ月経った頃の写真でキーボード棚を作った当初の写真です。現在は以下のようになっています。 下から2段目は道具を置いています。道具は他にもあるのですが収まりが悪いハンダゴテや腕を増やすツールとかを置いています。一番下の棚は非常に心苦しいのですがいわゆる積みキーボードというものです。今年中に何とか進捗を出そうと思っています。最初は実用重視で作ったキーボード棚ですが、実際に作ってみるとショーケースみたいな感じで毎日眺めていて楽しいので、キーボードの楽しみ方が一つ増えました。これはおすすめです。ちなみに本棚はあと6台あるので徐々にキーボード棚に変えて行こうと思っています。 6. デコキーのすすめこの記事の冒頭でカジュアルにキーボードを楽しむ方法について書きたいと述べましたが、その一つがデコキーです。デコキーとは「デコレーションされたキーボード」の略で、ここではシールや紙・布等を両面テープとでキーボードに貼り付けて飾ることを指しています。メイクと同じで盛りキーボードと言ってもよいかもしれません。 EndGameという言葉をよく耳にしますが、実際に打ち心地やキー配置はEndGameに近づけられても見た目は必ず飽きがくると思われます。もちろん際限なくキーキャップを変えたり、キーキャップやケーブルやケースやPCB等を自作できる時間と金銭と能力に余裕がある人はいいのですが、世の中の大半の人はそうでないと思われます。そこでデコキーでカジュアルにキーボードの見た目を変えてみようというのがここでの提案です。もちろんこのデコキーがしやすいキーボードには前提があってシールを貼る余白が必要です。現在の自作キーボードキットにはデコキーに必要な余白を持つものが非常に少ないのですが、Ergo42はその中では珍しくデコキーと相性が良いと思われます。 Ergo42の上部の台形部分にシールを貼るだけで印象はガラッと変わります。この写真では木目調のシールを貼っていますが。この手のシールや紙・布は100均で安く手に入り種類も豊富です。自分もちょっとした気分転換にキーキャップに合わせて気軽に盛り直していますが、簡単な割には満足度は高いです。 上のキーボードはRed Samuraiのキーキャップに合わせて台形部分と巻取り式ケーブルに畳縁を貼っており、ケース側面に畳シールを貼っています。一つ注意点を上げるとすればErgo42にデフォルトで付属しているのは鍋ネジなので、そのままだとシールが浮いてしまうので皿ネジに変える必要があります。また皿ネジにしてもそのままだとまだ少し浮くので適当なドリルでネジが平らになるようにアクリル板を少し凹ませる必要があります。 7. 最後に長々と書いてしまいましたが、自作キーボードの世界に飛び込んで後悔はしていません。最初は面倒だったり怖かったりしたものですが、すぐに助けてくれる気の良いコミュニティがあるので、余計な心配をせずにまずは手を動かしてみることが重要だと気づきました。そして新しく開けた扉の先には、モノを作る楽しさと感動がダイレクトに待っています。何より普段何気なく使っているキーボードに対して理解が増し、不便も解消され、愛着も得られると思います。ただ無理をしすぎると反動が来るので、自分にあったペースで自分にあった楽しみ方を見つけて行きたいという思いでこの記事を書きました。この記事がキーボードをカジュアルに楽しみたい方や自作キーボードに興味があるけどまだ手を出せていない方の一助になれば幸いです。 おいでよ、自作キーボードの世界へ この記事はErgo42 with DSA COFFEE HOUSE\" KEYSET & Cherry MX Redで書きました。1.軸は悩みましたがまずは無難に赤軸にしました。 ↩2.結局ISPフラッシャーはさらに2ヶ月も経って、諦めかけた頃に送られてきましが、firmwareの書き込みは無事成功しました。 ↩3.Quick and dirty guide to flashing your Planck Light bootloader : olkb ↩4.現在は後継のErgo42 Towelが販売されています。 ↩5.決して怪しい本ではないです。 ↩6.スキャナはScanSnap S1500Mです。 ↩","link":"/cats-cats-cats/2018/12/12/keyboard/"},{"title":"Hexoでブログに再入門","text":"Advent Calendar用に久々にブログを立てて見ました。以前にパブリックに書いたのは多分10年以上前のような気がします。レンタルーサーバ借りてドメイン取ってRubyで動く何かを使って立てた気がするけど、よく思い出せません・・・ まぁ、過去のことは置いておいてせっかく立てたので、何か役立ちそうなことをメモしていきたいと思います。 目次1. Hexoとは2. 静的サイトジェネレータ3. 静的サイトジェネレータの長所4. 静的サイトジェネレータの短所5. なぜHexoを選んだのか？6. まとめ7. 補足 1. Hexoとはとりあえず今回このブログは、Hexo使って立ててみました1。Hexoはブログを書くためのフレームワークですが、WordPressのような従来型のブログサービスとの一番の違いは、静的にブログを生成するか、動的に生成するかです。 2. 静的サイトジェネレータHexoは静的サイトジェネレータというツールに分類されていて、あらかじめ用意したブログのテキストや画像等から、ブログの表示に必要なHTML,CSS,JavaScriptなどの静的ファイルを生成してくれます。Hexoがやってくれるのはここまでで、あとはHexoが生成したファイルをお好みのWebサーバに公開すればブログが表示されると言う仕組みです。WordPressはこれとは違い、Webにアクセスが来るごとにWebページをサーバサイドのプログラムが動的に生成してブラウザに返しています。 3. 静的サイトジェネレータの長所どちらにも一長一短があって、静的サイトジェネレータの良いところはローカルで確認してから、チェックが完了してからWeb公開できる点です。このローカルで確認できると言うのはすごい強みで、画像のアップロードも不要だし、テキストやCSSの修正も手元で直してすぐ確認できると言うのが非常に心地いいです。これが動的サイトだと一度サーバにアップロードして確認と言う手間が一つ入るため、色々と面倒臭くなります。 また、静的サイトジェネレータの場合、サイトの生成に必要なファイルは必然的に手元で管理することになるので、Gitなどのバージョン管理システムと相性が良いです。これは非常に安心感があって、こまめにコミットしておけば様々な理由による『ブログの消失』を未然に防ぐことができます。動的サイトの場合も手元にファイル等の形で残しておけば、バージョン管理することができますが、ちょこっとした修正をサーバにアップロードして、バージョン管理用ファイルに反映し忘れるという事故が起き易いです。 セキュリティ的に安心というのも魅力の一つですね。サーバサイドの処理がないので攻撃パターンが限られますし、特にWebサーバにホスティングサービスを使っている場合、自分ではほぼ何もセキュリティについて考えることはないです。少ない懸念点の一つとしてあげるならばJavaScriptを使ってる場合です。まぁ最近は大抵知らずのうちに使われてると思いますが、特に怪しいライブラリを使っている場合に勝手にマイニングされたり、踏み台にされる場合もあるので、気をつけた方が良いかもしれません2。 4. 静的サイトジェネレータの短所このようにHexoのような静的サイトジェネレータ型のブログツールには利点がたくさんあるのですが、もちろん欠点もあります。一番目立つのは、非エンジニアにとって利用するのにハードルが高いということです。例えば、Hexoのトップページには「Simple」と謳いながら、以下の導入時のコマンドが載っています。\u0010\u0010\u001012345$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo server これを見て「簡単そうだな、やってみようかな」と思える人は世の中に1%もいないと思います。もちろん現役のWebフロントエンドエンジニアなら、これを見てお湯を注いだカップラーメンができるより早くブログサイトを構築できるでしょう3。つまり、現在のところ静的サイトジェネレータはGitが分かるフロントエンドエンジニアにとって、非常に使い易いツールだけど、それ以外の人は、まぁ覚悟して取り組んでくださいとしか言いようがないですね。。。もちろん将来的にはシンプル詐欺などではなく本当に非エンジニアでも無理なく使えるツールが出てくるかもしれないので、この点は静的サイトジェネレータ固有の短所というよりもまだ成熟途中の技術の特徴ということになります。 あと当然ですが、静的サイトジェネレータ単体ではサーバサイドという概念がないのでRDBと連携して、大量データの検索とかテーブルの結合とかそういった処理も基本できません。カウンタやトラックバックやコメント機能などのブログにおなじみの機能もデフォルトではありません。このような場合はWebサービスと連携するのが常套手段ですが4、複雑になりそうなら最初から動的サイトやSPAやSSR等の構成5を検討した方が良いでしょう。逆に考えると静的サイトジェネレータの一番の使い道はこのような処理が基本的に不要な場合のプライベートなブログで、まさにHexoはこのサイトにうってつけなのでしょう。 5. なぜHexoを選んだのか？まさしく、前掲のコマンドを見て簡単そうに思えたからです(笑)。つまりそれをコピペして実行するだけで試せる環境と知識をすでに有していたからということになります。あとはHexoと言うより静的ジェネレータの利点の方が大きいですね。最初はVPSやパブリッククラウド上に、以前のように動的サイトを構築しようと考えていましたが、構築コストやセキュリティのことを考えるとだんだん気が重くなってきました。ブログサービスも検討しましたが、ソースは全てGit管理したかったのと手元で表示確認がすぐにできないので却下しました。つまりGit管理と親和性があって手元ですぐにサイトの表示が確認できて、セキュリティーの心配をあまり心配しなくてもいい記事投稿が簡単にできるブログツールを探していたということになります。その中で一番最初に目に付いたのがHexoだったというだけです。記事がMarkdownでかけるのもいいですね。なのでもっといいツールが見つかれば移行するかもしれませんが、しばらくはHexoと仲良くやって行こうと思っています。目下の悩みはテーマをどうするかです。デフォルトのlandscapeも拡張しやすくて悪くはなかったのですが、せっかくこれだけのテーマが公開されているので色々と試したいと思っています。6。 6. まとめまとめです。Hexoの箇所は静的サイトジェネレータに置き換えても大体合ってます。３行を目指しましたが、なかなか難しいですね。 Hexoは静的サイトジェネレータ型のブログツール Hexoはローカルで編集して、すぐに実際の表示が確認ができるので、心地よい Hexoはバージョン管理と相性が良く、こまめにコミットで安心できる Hexoはセキュリティ的に動的サイトに比べて安心 Hexoは非エンジニアに基本向かない Hexoではカウンタやコメント機能等、サーバサイドの処理が必要なものは基本使えない 7. 補足前述の通りでHexoを最初に選んだのは私にとって簡単そうに見えたからです。だけどそう見えたのは私の好みや経験という色眼鏡があったからなので、申し訳ないですがこのブログを読んでくれた方に当てはまるかどうかは分かりません。もちろん世の中にはHexo以外にも山のように静的サイトジェネレータがあるので、余力のある人にはぜひ以下のサイトを参考に自分にあった運命の静的サイトジェネレータを探し出して欲しいです。。。7 StaticGenStaticGen is a leaderboard of the top open source static site generators. Promoting a static approach to building websites. 1.Hexoは「ヘキソ」と発音しています。正しいかどうかは分かりません。 ↩2.つい先日もnpmパッケージの「flatmap-stream」に仮想通貨を盗み出すコードが混入していて話題になりました。近年JavaScriptのセキュリティインシデントは増加傾向にあるので楽観視はできません。 ↩3.テーマを弄りはじめるとエンジニアでも頭を抱えそうですが・・・ ↩4.例えばコメント機能はDisqusと連携すれば実現できます。 ↩5.SPA = Single Page Application, SSR = Server Side Rendering ↩6.現在このブログで利用しているテーマはフッターを参照してください。テーマは今後変わる予定があるのであえて本文には記しません。 ↩7.願わくばこの記事を読んだ人が静的サイトジェネレータの旅に出て、ブログを書いてくれてそれが、私の目に止まりますように・・・ ↩","link":"/cats-cats-cats/2018/12/02/start-blog-hexo/"},{"title":"JapanContainerDays v18.12 に初参加","text":"12/4(火)にJapanContainerDays v18.12に初参加しました。このイベントは春に1回目を開催して今回で2回目の開催だそうですが1、会場には800人以上の人が詰め掛けたようで非常に盛況でした。 JapanContainerDays v18.12[12/3-5開催]コンテナ活用/クラウドネイティブの現状をひとまとめにした開発者のためのイベント - JapanContainerDays 目次1. 会場の様子2. キーノート3. 参加セッション一覧3.1. 24日参加セッション3.2. 25日参加セッション4. 食事5. 戦利品6. 感想とまとめ 1. 会場の様子会場は御茶ノ水のソラシティカンファレンスセンターでした。ここには以前にデブサミ夏や大江戸Ruby会議06に参加した時に来たことがあったので特に迷うことなく到着しました2。9:40開始だったのですが念の為30分早く会場入りしたのでキーノートの会場はまだ半分近く空いていました。 撮影：JapanContainerDays実行委員会引用元 撮影：JapanContainerDays実行委員会引用元 2. キーノートさすがにキーノート開始直前には満席近くになっていました。キーノートは会社やコミュニティの代表が順番に登壇する形式で2時間行われました。その中でなんといっても目玉はCNCFのCOOであるChris Aniszczykさんの発表だと思います。 撮影：JapanContainerDays実行委員会引用元 CNCFの歩みや今後の展望が語られていました。気になったのはIoTやEdgeにもKubernetesが進出するという話題でしょうか。KubeEdgeには注目していきたいと思います。あとはどんどんServerlessやNodelessに進んでいく方向性が強調されていました。virtual-kubeletの紹介もあり今後が非常に楽しみです。 kubeedge/kubeedgeKubernetes Native Edge Computing Management Framework - kubeedge/kubeedge virtual-kubelet/virtual-kubeletVirtual Kubelet is an open source Kubernetes kubelet implementation. - virtual-kubelet/virtual-kubelet あと、クラウドネイティブの定義も紹介されていました。今までクラウドネィティブとは何ぞやと思っていたので少しはもやもやが晴れたような気がします。 クラウドネイティブテクノロジは、パブリック、プライベート、およびハイブリッドクラウドなどの最新のダイナミックな環境でスケーラブルなアプリケーションを構築および実行するための組織の能力を強化します。コンテナ、サービスメッシュ、マイクロサービス、不変インフラストラクチャ、および宣言型APIは、このアプローチの例です。 これらの技術は、復元力があり、管理しやすく、観測可能な疎結合システムを可能にします。堅牢な自動化と組み合わせることで、エンジニアは頻繁に、そして予想通りに影響の少ない変更を最小限の労力で行うことができます。 クラウドネイティブコンピューティング基盤は、ベンダーに依存しないオープンソースのプロジェクトのエコシステムを促進し維持することによって、このパラダイムの採用を推進しようとしています。最先端のパターンを民主化し、これらのイノベーションを誰もが利用できるようにします。 クラウドネイティブの定義(Google翻訳を利用)引用元 あとはCNNFの歩き方や全体像も紹介されていました。 CNCF Cloud Native Interactive LandscapeFilter and sort by GitHub stars, funding, commits, contributors, hq location, and tweets. Updated: 2019-01-13 00:20:01Z Trail MapはともかくLandscapeは圧巻ですね・・・ まぁその中でもCNNFが直接ホスティングしているのはごく僅かです。これを見ると全部で30程ありますが、現時点では成熟度が最高のGraduatedになっているのはKubernetes、Prometheus、Envoyのわずか３つです3。これからクラウドネイティブが浸透していく中でこれらのプロジェクトがどの様になっていくのか注視していきたいと思います。 キーノートには他にも面白い発表がいくつもあったのですが、印象に残ったのはメルカリの発表でした。なぜコンテナオーケストレーションにKubernetesなのかという問いに対して拡張性とエコシステムを挙げていましたが、これと同じ答えはこの後に続くセッションでも繰り返し聞くことになりました。そしてこの答えがOSSで勝ち抜くための到達点なんだという気がしました。シンプルで直交的で整合性のとれた拡張性で素早くエコシステムを構築すること。言葉にすると短いですがこの状況をわずか数年で作り上げて決着までほぼつけてしまうとは、改めてKubernetesの成し遂げたことの凄さを実感しました。 撮影：JapanContainerDays実行委員会引用元 3. 参加セッション一覧とりあえず参加セッションを列挙してみます。メモったキーワードを記載していますが、あやふやな部分も多く含むためさらっと流していただけると幸いです。 3.1. 24日参加セッション keynote CNCF Microservices on Kubernetes at Mercari（Mercari） Kubernetesによる機械学習基盤への挑戦（Preferred Networks） LINEエンジニアを支えるCaaS基盤の今とこれから（LINE） Cloud Nativeの未来とIBMの取組み （IBM） クラウドネイティブで作る、新しいクルマの世界（デンソー） ZOZOTOWNシステムリプレイスにおけるKubernetes活用（ZOZOテクノロジーズ） コンテナネットワーキング（CNI）最前線 コンテナネットワーキングは闇が深い、動きが早い、スケーラビリティに注意 Kubernetes ネットワーキングのすべて Services, Ingress, NetworkPolicy 40 topic of Kubernetes in 40 minutes serviceでなくingressを使え、latestタグは使うな、DockerHubのイメージは信用するな、バージョンアップは容易にするな、ボリュームは使うな、全機能を使う必要はない、ingressはGAではない Ansible、Terraform、Packerで作るSelf-Hosted Kubernetes Kubernetesから始めるクラウドネイティブエンジニアへの道 〜 Kubernetesトレーニングと、CKA/CKAD資格取得に向けて 〜 構築ツールを使わずにやってみた(kubernetes the hard way)、k8sはCloud Nativeにおいてはスターティングポイント 2019年はコンテナよりもクラウドネイティブ!? Knativeのすべて コンテナ辛い！そこでknative, カナリアリリースが楽、riffもあるよ After Party & Booth Crawl !! 3.2. 25日参加セッション 2020年のコンテナはどうなる!? コンテナプラットフォームのこれまでとこれから マイクロサービスは組織論に行き着くので難しい k8sは拡張性の高いOSようなもの K8sは開発やPOCまではうまくいくが本番運用に課題あり istioがここまでくると思っていなかった。サービスメッシュはエンタープライズにこそ必要 cloudfoudry,istio,mesoss,open shift,rancher,rio, core os,kubeflow, knative マイクロサービスの高可用性：Ingress, サービスメッシュの世界におけるロードバランシング nginx社は実在する plusもあるよ 複雑になったWebを簡素化したい fablic modelではすべてのappにサイドカーとしてnginxが入る Dockerセキュリティ: 今すぐ役に立つテクニックから，次世代技術まで 鍵をイメージに入れるな、--ssh,--seacretを使え。使えない場合はスカッシュやマルチステージというワークアラウンドを使え イメージスキャナ - clair, aqua microscanner 誤検知もあるので信用しすぎるな dockerソケットに気をつけろ。dockerグループに入れるのは危険 コンテナ is namespace + capabilities + cgroups SELinux無効化するときは「石川さん、Walshさんごめんなさい 」と唱えてから実行 Kubernetesと暮らすRancherな生活 rancherはk8sのオーケストレーション層ではなくその上のストラテジー層 2.0でk8s一本になり、Pure Goになり、マネージドもOKになりカタログがHelmになった rioはおもしろそうだがまだかなり柔らかい。k8sを意識しない時代に・・・ MeetUpを活性化せよ！最強のリアルタイムQA投稿アプリをCloud_Nativeにつくってみた - Qicoo - 自演が可能です - eks,ec2,elastic cache, rds,cloud flront, route 53,cert manager, elb, travis ci, kustomize, hepioak, spinnaker,kanyeta,prometheousOperator, Halyard - Cloud Native Developers JP - Cloudcraft – Draw AWS diagrams コンテナ時代のOpenStack Kubernetes Meetup Tokyo 2年間の振り返りと未来 参加者の規模数がすごい 登壇者限定で濃い話をする会がある 登壇してください 自分が参加したセッション以外は以下にまとめがあるのであとで読みたいと思います。 JapanContainerDays v18.12 matome – JapanContainerDays Team – MediumJapanContainerDays v18.12 公式資料まとめ 4. 食事昼食はランチセッション中に配布されたサンドイッチやまい泉ヒレかつサンドを食しました。 撮影：JapanContainerDays実行委員会引用元 お菓子やドリンクも無料で楽しむ事ができました4。ContinerDaysのロゴが入ったマカロンが可愛かったです。 撮影：JapanContainerDays実行委員会引用元 After Partyではビールやワインや焼酎をの呑みながらワイガヤしてました。急遽決まったLT大会では個性あふれる様々な会社がHiringトークをしていました。 撮影：JapanContainerDays実行委員会引用元 5. 戦利品勢い余って電子書籍3冊も買ってしまいました。面白かったのはNGINXで配られたUSBケーブルです。正直そのタコ足のような発想はありませんでした(笑) 6. 感想とまとめ参加したことでCloudNativeがどこまできているか肌で実感できた気がしました。自宅ではminikubeからGPUを触れる環境を構築していますが、いまいち有効利用できていない気がしていたので、このイベントを機会に手を動かしながらいろいろとCloudNativeに近づけて見たいと思います。 Kubernetesの一人勝ち 今後はKubernetesのエコシステムの何処を占めるかの戦い サービスメッシュ(Istio)がかなり熱い Helmもデファクトになりそう knative, virtual-kubeは注視したい 機械学習のインフラとしても面白そう Kubernetesは本番運用に課題あり knative, OpenShift, Rancher等さまざまなアプローチで解決しようとしている 最終的にはNoOpsやサーバーレスやFaaSな未来に行き着くのだろう・・・（時期未定） 来年はCloudNative Days1.JapanContainerDaysは2回目にして、今回で最終回だそうです。次回からはCloudNative Daysに変わるそうですがCloud Native Days Tokyoとの関係性はよくわかりません・・・ ↩2.駅から徒歩1分なので、そもそも迷うほうが難しい気もします・・・ ↩3.というかPrometheusはCNNFだったとは初めて知りました・・・ ↩4.当日は本当に無料だと喜んだのですが、冷静に考えると参加費を払っているので無料でもなんでもなかったです・・・ しかし、チケットは最後までEarly Bird価格のまま安売りされていたけど主催者の想定した人数が集まらなかったから値下げしたのか、それとも早めに予定金額を調達できたから値下げしたのか真相がわからない ↩","link":"/cats-cats-cats/2018/12/06/container-days/"},{"title":"サイレントでホットスワップなErgoDash miniを制作(後編)","text":"2018年のキーボード納めとして、年末にErgoDash miniを組みました。この記事はその後編にあたります。前編は以下になります。 サイレントでホットスワップなErgoDash miniを制作(前編) 目次1. 制作工程1.1. Pro Micro用のコンスルーの取り付け1.2. ホットスワップ用ベリリウムの取り付け1.3. スタビライザー、キースイッチ、Pro Microの取り付け1.4. Pro MicroにQMK Firmwareの書き込み1.5. 動作確認1.6. ケースの組み立て1.7. キーキャップの取り付け 〜O-ringによる静音化〜1.8. 完成!2. トラブルシューティング3. ホットスワップ化の長所と短所4. まとめ 1. 制作工程前回はUndergrow LEDの取り付けまで行いました。今回はいよいよPro Microとキースイッチのホットスワップ化に挑みます。 1.1. Pro Micro用のコンスルーの取り付けPro Microのホットスワップ化1ですが、これはなるべく行っておいたほうがよいです。理由は前述のとおりモゲる心配もありますし、初期不良でPro Microが動作しないこともあります。基盤にはんだ付けすると後で剥がすのが非常に大変です。Pro Microのホットスワップ化の方法は主に２つあって、コンスルー(スプリングピンヘッダ)を用いる方法と、ソケットを用いる方法です。今回はコンスルーを利用しました。コンスルーはピンの部分がバネのような構造になっており、基盤部分にはんだ付けしなくてもスルーホールと密着する仕組みになっています。ただし、コンスルーとPro Microのはんだ付けは必要なようです。コンスルー利用時の注意点としては、コンスルー自体に向きがあることです。 Helixビルドガイドより引用元 向きを間違えると基盤から抜けやすくなったり接触不良になりやすいので、Helixのビルドガイドを参考に取り付けをしました。 1.2. ホットスワップ用ベリリウムの取り付けここからがようやくキースイッチのホットスワップ化の話です。キースイッチのホットスワップ化する方法も主に２つあり、スルーホールにベリリウム銅を埋め込む方法とスイッチ用PCBソケットを利用する方法です。後者は基盤やケースの対応が必要になるので、今回は「みんな大好きベリリウム」2を使います。 ベリリウムは上記の写真のとおり非常に小さな金属です。写真右下ののキースイッチに実際にベリリウムを嵌めていいますが、上の方の足のベリリウムは非常に硬かったので最初下の足だけピンセットでベリリウムを嵌めて、もう一つのベリリウムは基盤のスルーホールに嵌めてからスイッチを垂直に挿すようにして嵌めました。このとき大事なのはベリリウムの穴に対してちゃんと狙って真上から力をかけることです。スイッチの足は折れやすいので斜めに力を掛けるとすぐに穴に入らずグニャリと逝ってしまわれます3。このベリリウムを挿す作業は非常に辛い作業で一部の人々には「田植え」とも呼ばれていますが、基盤から生え揃った金色の稲穂を眼前にすれば目頭が熱くなること必死です(笑)。 ErgoDash miniではこの段階で親指付近のキーの物理配置を決定しますが、せっかくホットスワップにしたのでキーの足が入る全てのスルーホールにベリリウムを埋め込んでおくことをオススメします。こうすることで後ではんだ付けすることなくキーの物理配置を変更することができます。実際にキーマップをいじっていると物理配置をいじりたくなる瞬間が何回かあってホットスワップにしておいてよかったと実感できました。 さて、この田植え作業が終わったと思って一息つけるかと思えば、そうは問屋が卸しません・・・組立工程の屈指の難関、ベリリウムのはんだ付けです。このはんだ付けの何が難しいかと言えば、基盤から顔を覗かせているベリリウムの高さがあまりないので、ベリリウムの穴にはんだが入らないように周囲にだけはんだを盛るのが大変なのです。単にスイッチの足をはんだ付けすればいいのであれば、一つの足に付き数秒で済みますが、ベリリウムの周囲をはんだが入らないように固めるとすれば、はんだを数回に分けて慎重に盛らねばなりません。自分の場合、普通にスイッチにはんだ付けするより5倍程の時間がかかりました・・・4 1.3. スタビライザー、キースイッチ、Pro Microの取り付けホットスワップにしたのでここからは基盤に挿すだけのお仕事です。ただスタビライザーを取り付ける場合には静音化のためにグリスをしっかり塗りましょう。自分は手元にあったシリコングリスを塗りました。オイル系だとあまり音を抑えられなかったのでここはグリスがいい感じでした。キースイッチは足が曲がらないように慎重にベリリウムを狙って挿すようにしましょう。Pro Microは基盤に挿すだけなのですが、Pro Microに着いているLEDは光量があって透明のアクリルケースだと拡散して結構目立ちます。気になる人は不透明な絶縁テープで目張りをすることをオススメします。 1.4. Pro MicroにQMK Firmwareの書き込みこの作業は公式のビルドガイドどおりで大丈夫です・・・といっても公式もリンクで実際はQMK Firmwareのページにもろもろ書いてあります。とりあえずGMK Firmwareの環境構築は終わっているものとして、骨子だけ説明します。ターミナルを開いて以下の手順で実施すれば大丈夫です。 12345cd cp -r keyboards/ergodash/mini/keymaps/default keyboards/ergodash/mini/keymaps/hinastory # デフォルトのキーマップをコピーして自分専用のものを作るemacs -nw keyboards/ergodash/mini/keymaps/hinastory/rules.mk # 「RGBLIGHT_ENABLE = yes」を追加emacs -nw keyboards/ergodash/mini/keymaps/hinastory/keymap.c # お好きなキーマップに変更sudo make ergodash/mini:hinastory # ファームウェアのビルドと転送。 上記で「hinastory」の部分は適当に好きな名前にしてください。自分のオリジナルのキーマップになるはずなのでユーザ名にしておくとわかりやすいです。emacsの部分はお好きなエディタに読み替えてください。Backlight LEDを有効にするためにはrule.mkに「RGBLIGHT_ENABLE = yes」を追加する必要があります。ファームウェアのビルドの転送に関してはコマンド実行後に以下のメッセージが表示されたら、PCと片側のキーボードをUSBケーブルでつないで、キーボードのリセットスイッチを押してください。この作業時にはTRRSケーブルは抜いておいてください。もう片側も同様にファームウェアの転送が必要です。 1Detecting USB port, reset your controller now... 1.5. 動作確認おめでとうございます！ここまでの作業でマスターにUSBケーブルをつなぎ、左右のキーボードをTRRSケーブル5で繋げはキーボードは光り、全てのキーが入力できるはずです。動作に問題があった方はご愁傷様です・・・ケースを組む前にトラブルシューティングにお進みください・・・6 1.6. ケースの組み立てケース組み立てはビルドガイドの通りにアクリルプレートをネジ止めすれば大丈夫です。問題はキーボードに傾斜をつけたい場合です。もともとErgodash miniにはPro Microのスペースを確保するために手前から奥にかけて軽めの傾斜が付いていますが、もう少し奥側を高くしたい場合はゴム足で調整するのが簡単です。 上記の写真左がキーボードの手前側で写真右がキーボードの奥側になります。手前に着いている小さいゴム足がキットに付属しているもので、奥側の少し大きめのゴム足が追加で購入したものです。ゴム足は色々なサイズのものがあるので好みの大きさを購入してください。Ergodash miniはコンパクトなキーボードなのでこのくらいの傾斜が自分にはちょうどよかったです。また、キーボードの内側を高くしたい場合も左右のゴム足の高さを変えることで調整できます。 1.7. キーキャップの取り付け 〜O-ringによる静音化〜いよいよ最後にキーキャップを取り付け作業です。自作キーボードの制作の中でも屈指の楽しい作業です。まずは手持ちのキーキャップを机に並べる所から始めましょう。自分はピラミッドを組みました(笑)。キーキャップはキースイッチに適合したものであれば何でもよいです。一般的にはCherry MX互換スイッチが大多数なのでCherry MX対応のキーキャップから揃えることをオススメします。今回使ったGateron SilentスイッチもCherry MX互換のスイッチだったので、大量のキーキャップとキャッキャウフフしながら、キーボードの着せ替えを楽しみました。まさに至福のひとときです。 どのキーキャップをつけるか決めたら最後に静音化の一手間をかけます。前編で説明したO-ringです。今回はグループバイ(共同購入)した3mm O-ringを装着しました。O-ringの大きさや素材によって静音性は変わるので好みのものを選んでください。 取り付け方は簡単で上記の写真のようにキーキャップの裏の足に嵌めるだけです。2uのキーキャップには3箇所嵌める必要があります。 1.8. 完成!お疲れ様でした。完成です！ 2. トラブルシューティング今回自分が体験したトラブルはダイオードの挿し忘れ、LEDのはんだ不良、ベリリウムの穴にはんだ流し込み、ベリリウムのはんだ忘れ、スイッチの足にベリリムを嵌めようとしてスイッチの足を壊す、スタビライザーつけ忘れ、TRSケーブルとTRRSケーブルの間違い・・・書いてて自分はアホの子ではないかとおもうくらいやらかしています・・・orzただこれはみんな通る道だと信じています・・・以下のリンク先にこれらのトラブルの原因と対処方法がまとまっているのでご確認ください。ここに自分が体験したほぼ全てのトラブルが記載してありました。本当にいい情報なのでまとめてくれた人に感謝です。自分が自作キーボードを始めた頃にこのページはなかったのが悔やまれます・・・ キーボードを組み立てるときに陥るミスと対策 - Self-Made Keyboards in Japanよくあるシチュエーション 組み立てた後、一部キーの動作がおかしい場合 原因のほとんどははんだづけにあります。 はんだづけを忘れている箇所、ダイオードの向き、LEDテープなどとショートしていないか確認しましょう。 キットを購入する場合 キットのビルドガイドや組み立て説明書などを読ん… 上記のページで解決しない場合はDiscodeで質問しましょう。「#ergodash」という専用チャンネルもありますし、自作キーボードの入門的な質問なら「#beginner-help」でもいいでしょう。親切な人が多いのできっと誰かが手を差し伸べてくれるはずです7。 ここからはトラブルの傾向に対する自分の感想ですが、やはりいちばんの関門はキットやパーツの入手性の悪さですね。人気のキットはすぐに売り切れますし、グループバイ(共同購入)の情報も様々な情報を注視していないと拾えないです。最近は大分改善されましたが、一昨年まではまともに組もうとすると海外通販を避けて通れない状態でした。しかし、去年はコミケやTokyo Maker Fairや技術書店にいけばキットを購入でき、Boothでも手に入りやすい状態でした。今年はもうすぐ遊舎工房さんの実店舗が秋葉原にオープンするらしいので、入手性に関してはさらに改善される見込みです。次の鬼門ははんだ付けですね。特にPro Microのはんだ不良は結構耳にします。またダイオードやPro Microを逆付けしてはんだを剥がそうとして基盤を壊す人もそこそこいます。またLEDチップの実装は阿鼻叫喚の様相を呈しています。 あとはQMK Firmwareですね。苦労のタイプは大きく２つあって、QMK Firmwareそのものに苦戦する場合とQMK FIrmwareにたどり着く前の前提知識で苦戦する場合です。前者はQMK Firmwareのどこをいじればキーマップを思い通りにできるか悩む場合でドキュメントを読んである程度試行錯誤しないといけないでしょう。後者はそもそもビルド環境の構築やGit操作やC言語やmakeの仕組みの理解が足りなくて苦労しています。自分は前者の苦労だけで済んだので比較的楽でしたが、後者で苦労している人も多そうですね。残念ながらこの辺の苦労話を書くのはここの余白は狭すぎます・・・8 3. ホットスワップ化の長所と短所最後にホットスワップ化の作業について、自分が感じたProsとConsをまとめてみたいとおもいます。 Pro Micoのホットスワップ化(コンスルー利用時) Pros モゲ対策になる 初期不良対策になる Cons コンスルーの購入にお金がかかる コンスルーの向きに注意が必要 スイッチのホットスワップ化(ベリリウム利用時) Pros スイッチを自由に変えられる ケースを後から変えられる キーの物理配置を後から変えられる(ErgoDash等の一部のPCBのみ) Cons ベリリウム高い・・・ ベリリウムの入手性が若干悪い 田植えが辛すぎる・・・ キーキャップを引き抜くときに、一緒にキースイッチも抜ける場合がある Pro Microに関しては特に言うことないですね。大抵の人にオススメできると思います。スイッチのホットスワップ化は本当に人を選びます。とにかくお金と慎重さと忍耐が必要です。一旦ホットスワップ化をしてしまえば当然最高の気分になれます。特に末永くキーボードを使っていくとなると、後でキースイッチを変えたり、lubeをやり直したくなったりしますがこれをいつでもできるという安心感はすごいですね。ケースもスイッチをはんだ付けするとトッププレートはかえられませんが、これもスイッチを引き抜けると簡単に交換可能になります。あと最初は意識していなかったキーの物理配置を後から簡単に変えられるのも地味に嬉しかったです。 キースイッチのホットスワップ化後の注意点には、キーキャップを引き抜くときにキースイッチも抜ける場合があります。これはケースやキーキャップの装着部分のきつさにもよるのですが、自分の場合何もしないと3つに一つはキースイッチも一緒に抜けます。対策としてはキーキャップ引き抜き器(針金タイプのもの)の一つを治具代わりにして、キースイッチの上部を押さえて、２本めのキーキャップ引き抜き器でキーキャップを抜いています。 4. まとめまず、静音化ですがこれは体感でかなり変わりました。もちろん人によって評価は変わると思いますが、静かな会議室で利用しても問題ないくらいにはなったと感じています。また打ち心地に関してもlubeのおかげで大分なめらかになって、疲れにくくなったと感じました。ホットスワップ化に関しては、特にスイッチの作業自体は苦労しましたが一度壁を超えてしまえば恐れることはないし、その後に得られるものも大きいので次回のキーボード制作でも採用したいと思います。 最初は本当に静音化とホットスワップ化のことだけについて書く予定でしたが、書いている途中で色々盛り込みたくなって結局、前半、後半に分けても長い記事になってしまいました。本当にここまで読んで頂いてありがとうございました。この記事が読んでくれた方の自作キーボードの一助となれば幸いです。1.ここで言うホットスワップ化とは、はんだ付けせずにパーツを交換できる仕組みを指しています。電源を入れたまま抜き差しできるという意味ではないです。詳しくはここを参照してください。 ↩2.出典 ↩3.この作業でスイッチを2個ダメにしました・・・ ↩4.一回失敗してベリリウムの穴にはんだを入れてしまいました。5倍の時間というのは失敗したベリリウムを基盤から剥がす時間込みです。やっちまった瞬間は地獄に落とされたような感覚でした・・・ ↩5.TRSケーブルだとマスターの反対側のLEDが光りません。片側しかLEDがつかなかったらケーブルを疑ってみてください。 ↩6.当然自分もトラブルシューティングに進みました・・・なのでトラブルシューティングの節は体験談です・・・orz ↩7.自分も1台目のときにお世話になりました。このときははんだ不良で貼り付けた写真にいろいろな人がアドバイスをくれました。 ↩8.ようこそキーマップ沼へ を書きました。 ↩","link":"/cats-cats-cats/2019/01/10/ergodash-mini-2/"}],"tags":[{"name":"Keyboard","slug":"Keyboard","link":"/cats-cats-cats/tags/Keyboard/"},{"name":"Keymap","slug":"Keymap","link":"/cats-cats-cats/tags/Keymap/"},{"name":"Git","slug":"Git","link":"/cats-cats-cats/tags/Git/"},{"name":"ErgoDash","slug":"ErgoDash","link":"/cats-cats-cats/tags/ErgoDash/"},{"name":"AdventCalendar","slug":"AdventCalendar","link":"/cats-cats-cats/tags/AdventCalendar/"},{"name":"Hexo","slug":"Hexo","link":"/cats-cats-cats/tags/Hexo/"},{"name":"Web","slug":"Web","link":"/cats-cats-cats/tags/Web/"},{"name":"Container","slug":"Container","link":"/cats-cats-cats/tags/Container/"},{"name":"k8s","slug":"k8s","link":"/cats-cats-cats/tags/k8s/"}],"categories":[{"name":"DIY","slug":"DIY","link":"/cats-cats-cats/categories/DIY/"},{"name":"Tech","slug":"Tech","link":"/cats-cats-cats/categories/Tech/"},{"name":"Keyboard","slug":"DIY/Keyboard","link":"/cats-cats-cats/categories/DIY/Keyboard/"},{"name":"Tool","slug":"Tech/Tool","link":"/cats-cats-cats/categories/Tech/Tool/"},{"name":"Web","slug":"Tech/Web","link":"/cats-cats-cats/categories/Tech/Web/"},{"name":"Container","slug":"Tech/Container","link":"/cats-cats-cats/categories/Tech/Container/"}]}